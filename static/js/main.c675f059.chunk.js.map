{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","TextArea","Input","Option","Select","Footer","Layout","Header","Content","Sider","confirm","Modal","useState","urlInput","setUrlInput","urlList","setUrlList","urlSelected","setUrlSelect","useClippy","clipboard","setClipboard","isLoading","setLoading","Base64","s","btoa","unescape","encodeURIComponent","decodeURIComponent","escape","atob","urlType","text","startsWith","urlJson","JSON","parse","replace","starIndex","search","slice","urlName","decodeB64","length","test","isValidB64","list","split","urls","item","urlItem","shortid","generate","push","console","log","editNameOnClick","map","id","name","editButton","placement","title","arrowPointAtCenter","type","icon","EditTwoTone","size","onClick","performDelete","obj","old_select_index","findIndex","x","filter","message","success","className","justify","gutter","span","showSearch","value","loading","style","width","onChange","e","filterOption","input","option","children","toLowerCase","indexOf","key","disabled","DeleteOutlined","ExclamationCircleOutlined","content","okText","cancelText","onOk","onCancel","danger","addonAfter","target","onPressEnter","UndoOutlined","orignalName","raw","SaveOutlined","output","arr","urlOutput","i","url","newUrl","stringify","json","ps","encodeB64","DownloadOutlined","rows","marginBottom","block","pastedItem","marginTop","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c675f059.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { Card } from 'antd';\nimport { Row, Col } from 'antd';\nimport { Input } from 'antd';\nimport { Select } from 'antd';\nimport { Layout } from 'antd';\nimport { Modal } from 'antd';\nimport { message } from 'antd';\nimport { EditTwoTone, DeleteOutlined, DownloadOutlined, UndoOutlined, SaveOutlined } from '@ant-design/icons';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport shortid from 'shortid';\nimport useClippy from 'use-clippy';\nimport './App.css';\n\nfunction App() {\n  const { TextArea } = Input;\n  const { Option } = Select;\n  const { Header, Footer, Sider, Content } = Layout;\n  const { confirm } = Modal;\n\n  const [ urlInput, setUrlInput ] = useState('');\n  const [ urlList, setUrlList ] = useState([]);\n  const [ urlSelected, setUrlSelect ] = useState({});\n\n  const [ clipboard, setClipboard ] = useClippy();\n\n  const [ isLoading, setLoading ] = useState(true);\n\n  // convert utf-8 encoded base64\n  const Base64 = {\n    encode: function(s) {\n      return btoa(unescape(encodeURIComponent(s)));\n    },\n    decode: function(s) {\n      return decodeURIComponent(escape(atob(s)));\n    }\n  };\n\n  const urlType = (text) => {\n    if(text.startsWith('vmess://')){\n      return 'vmess';\n    }else if (text.startsWith('trojan://')){\n      return 'trojan';\n    }else if ((text.startsWith('ss://'))){\n      return 'ss';\n    }else {\n      return 'unsupported';\n    }\n  }\n\n  const urlJson = (text) => {\n    if(urlType(text) === 'vmess'){\n      return JSON.parse(Base64.decode(text.replace('vmess://','')));\n    }else if(urlType(text) === 'ss'){\n      const starIndex = text.search('#');\n      return Base64.decode( text.slice(5,starIndex))\n      // chacha20-ietf:password@mydomain.com:8888\n    }else {\n      return text\n    }\n  }\n\n  const urlName = (text) => {\n    if(urlType(text) === 'vmess'){\n      return urlJson(text)['ps'];\n    }else if (urlType(text) === 'trojan'){\n      const starIndex = text.search('#');\n      return decodeURIComponent(text.slice(starIndex+1));\n    }else if (urlType(text) === 'ss'){\n      const starIndex = text.search('#');\n      return decodeURIComponent(text.slice(starIndex+1));\n    }\n  }\n\n  const isValidB64 = (text) => {\n    const base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n    return base64regex.test(text);\n  }\n\n  const decodeB64 = (text) => {\n    if(text.length && isValidB64(text)){\n      const list = Base64.decode(text).split('\\n');\n      const urls = [];\n      for (let item of list){\n        let urlItem = { 'type': urlType(item), 'name': urlName(item),\n        'json': urlJson(item), 'raw': item, 'id': shortid.generate() };\n        urls.push(urlItem);\n      }\n      setUrlList(urls);\n      setUrlSelect(urls[0]);\n      console.log(urls);\n      return urls;\n    }\n  }\n\n  const encodeB64 = (arr) => {\n    console.log(arr);\n    let urlOutput = '';\n    for (let i=0; i<arr.length; ++i){\n      const url = arr[i];\n      if(url.type === 'vmess'){\n        let newUrl = JSON.parse(JSON.stringify(url.json));\n        newUrl.ps = url.name;\n        urlOutput += 'vmess://' + Base64.encode(JSON.stringify(newUrl));\n      }else if(url.type === 'trojan'){\n        const starIndex = url.json.search('#')\n        urlOutput += url.json.slice(0,starIndex) + '#' + encodeURIComponent(url.name);\n      }else if(url.type === 'ss'){\n        const starIndex = url.json.search('#')\n        urlOutput += 'ss://' + url.json.slice(0,starIndex) + '#' + encodeURIComponent(url.name);\n      }else {\n        continue;\n      }\n      if ( i+1 < arr.length) {\n        urlOutput += '\\n';\n      }\n    }\n    console.log(Base64.encode(urlOutput));\n    setClipboard(Base64.encode(urlOutput));\n    message.success('新鏈接己生成');\n    return Base64.encode(urlOutput);\n  }\n\n  const inputOnChange = (e) => {\n    setUrlInput(e.target.value);\n    const urls = decodeB64(e.target.value);\n    if (urls){\n      setLoading(false);\n    }\n    \n  }\n\n  const importFromClipboard = () => {\n    const pastedItem = clipboard;\n    setUrlInput(pastedItem);\n    const urls = decodeB64(pastedItem);\n    if (urls){\n      setLoading(false);\n    }\n  }\n\n  const selectOnChange = (e) => {\n    //console.log(e);\n    setUrlSelect(urlList[urlList.findIndex(x => x.id === e[1])]);\n  }\n\n  const editNameOnInput = (e) => {\n    setUrlSelect({...urlSelected, name: e.target.value });\n  }\n\n  const editNameOnClick = () => {\n    // Mapping the old array into a new one, swapping what you want to change for an updated item along the way.\n    setUrlList(urlList.map(item => item.id === urlSelected.id ? {...item, name: urlSelected.name }: item));\n  }\n\n  const editButton = (\n    <Tooltip placement=\"bottom\" title=\"修改\" arrowPointAtCenter>\n    <Button type=\"link\" icon={<EditTwoTone/>} size=\"small\" onClick={editNameOnClick}/>\n  </Tooltip>)\n\n  const saveOnClick = () => {\n    editNameOnClick();\n    const output = encodeB64(urlList);\n    setUrlInput(output);\n  }\n\n  const redoOnClick = () => {\n    const orignalName = urlName(urlList[urlList.findIndex(x => x.id === urlSelected.id)].raw);\n    setUrlSelect({...urlSelected, name: orignalName });\n    setUrlList(urlList.map(item => item.id === urlSelected.id ? {...item, name: orignalName }: item));\n  }\n\n  const deleteOnClick = () => {\n    confirm({\n      title: '確定要刪除' + urlSelected.name + '?' ,\n      icon: <ExclamationCircleOutlined />,\n      content: '這項操作無法復原',\n      okText: '確定',\n      cancelText: '取消',\n      onOk() {\n        //console.log(urlSelected);\n        performDelete(urlSelected);\n        //console.log('OK');\n      },\n      onCancel() {\n        //console.log('Cancel');\n      },\n    });\n  }\n\n  const performDelete = (obj) => {\n    const old_select_index = urlList.findIndex(x => x.id === obj.id);\n    // move pointer\n    if(urlList.filter(item => item.id !== obj.id).length){\n      setUrlSelect(urlList[(old_select_index+1)%urlList.length]);\n    }else {\n      setUrlSelect({});\n    }\n    \n    //delete\n    setUrlList(urlList.filter(item => item.id !== obj.id));\n\n    message.success('刪除 ' + obj.name + ' 成功');\n  }\n\n  return (\n    <div className=\"App\">\n      <Layout>\n      <Row justify={\"center\"}>\n        <h2>Shawdowrockets v2RaNG 訂閱鏈接編輯器</h2>\n      </Row>\n      <Content>\n      <Row gutter={16} justify={\"space-between\"}>\n        <Col span={12} >\n          <Card>\n            <Row gutter={[16,24]} justify={\"center\"}>\n              <Col span={14}>\n              <Select showSearch value={urlList.length? urlSelected.name: ''} loading={isLoading || !urlInput.length} style={{width: \"100%\"}} onChange={selectOnChange}\n              filterOption={ (input,option) => option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0  }>\n              { urlList.map( (item) => (<Option key={item.id} value={[item.name,item.id]}><b>[{item.type}]</b> {item.name}</Option>) ) }\n              </Select>\n            </Col>\n            <Col span={2}>\n            <Button type=\"primary\" disabled={isLoading} icon={<DeleteOutlined />} onClick={deleteOnClick} danger/>\n            </Col>\n            </Row>\n            <Row gutter={[16,24]} justify={\"center\"}>\n              <Col span={16}>\n              <Input addonAfter={editButton} value={urlSelected.name} onChange={editNameOnInput} onPressEnter={editNameOnClick}/>\n              </Col>\n            </Row>\n            <Row gutter={[48,1]} justify={\"center\"}>\n              <Col>\n              <Button type=\"primary\" icon={<UndoOutlined />} onClick={redoOnClick}>復原</Button>\n              </Col>\n              <Col>\n              <Button type=\"primary\" icon={<SaveOutlined />} onClick={saveOnClick}>保存</Button>\n              </Col>\n              <Col>\n              <Button type=\"primary\" icon={<DownloadOutlined />}>匯出</Button>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card>\n            <TextArea rows={4} onChange={inputOnChange} value={urlInput} style={{marginBottom: 16}}/>\n            <Button type=\"primary\" block onClick={importFromClipboard}>從剪貼版導入</Button>\n          </Card>\n        </Col>\n      </Row>\n      </Content>\n      <Footer>\n      <Row justify={\"center\"} style={{marginTop: \"50vh\"}}>\n      Created by&nbsp; <a href=\"https:www.phlinhng.com\">phlinhng</a>. &nbsp;All rights reserved.\n      </Row>\n      </Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}