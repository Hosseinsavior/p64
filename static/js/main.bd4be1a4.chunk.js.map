{"version":3,"sources":["img.js","App.js","serviceWorker.js","index.js"],"names":["cdn","Logo","v2ray","trojan","ss","App","TextArea","Input","Option","Select","Content","Layout","Footer","confirm","Modal","useState","base64Input","setBase64Input","textInput","setTextInput","subscribeInput","setSubscribeInput","urlList","setUrlList","urlSelected","setUrlSelect","useClippy","clipboard","setClipboard","isLoading","setLoading","inputActive","setInputActive","supportedType","Base64","s","btoa","unescape","encodeURIComponent","decodeURIComponent","escape","atob","urlType","text","startsWith","urlJson","JSON","parse","replace","starIndex","search","slice","urlName","isValidB64","test","decodeB64","length","list","split","urls","item","urlItem","type","name","json","raw","id","shortid","generate","push","console","log","encodeB64","arr","urlOutput","i","url","newUrl","stringify","ps","getUrlList","text_b64","filter","x","includes","err","inputOnChange","base64","e","target","value","error","subscribe","key","message","loading","content","axios","get","then","res","data","success","duration","catch","warning","importFromClipboard","editNameOnChange","map","performDelete","obj","old_select_index","findIndex","getLogo","logo","vmess","src","alt","class","hasOwnProperty","QuestionCircleTwoTone","inputTabContent","BASE64","gutter","span","rows","autosize","onChange","style","marginBottom","block","onClick","TEXT","URL","className","justify","xs","sm","md","title","bordered","height","showSearch","disabled","width","filterOption","input","option","children","toLowerCase","indexOf","icon","DeleteOutlined","ExclamationCircleOutlined","okText","cancelText","onOk","onCancel","danger","addonAfter","onPressEnter","UndoOutlined","orignalName","SaveOutlined","output","DownloadOutlined","tabList","tab","activeTabKey","onTabChange","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd4be1a4.chunk.js","sourcesContent":["const cdn = 'https://res.cloudinary.com/phlincloud/image/upload/v1583267224/b64-url-editor';\n\nexport const Logo = {\n    v2ray: cdn + '/v2ray_logo_ygiuj5.png',\n    trojan: cdn + '/trojan-gfw_logo_z3oa6y.png',\n    ss: cdn + '/ss_logo_nzt66p.png'\n}","import React, {useState} from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { Card } from 'antd';\nimport { Row, Col } from 'antd';\nimport { Input } from 'antd';\nimport { Select } from 'antd';\nimport { Layout } from 'antd';\nimport { Modal } from 'antd';\nimport { message } from 'antd';\nimport { DeleteOutlined, DownloadOutlined, UndoOutlined, SaveOutlined } from '@ant-design/icons';\nimport { ExclamationCircleOutlined, QuestionCircleTwoTone } from '@ant-design/icons';\nimport shortid from 'shortid';\nimport useClippy from 'use-clippy';\nimport axios from 'axios';\nimport './App.css';\nimport { Logo } from './img';\n\nfunction App() {\n  const { TextArea } = Input;\n  const { Option } = Select;\n  const { Content, Footer } = Layout;\n  const { confirm } = Modal;\n\n  const [ base64Input, setBase64Input ] = useState('');\n  const [ textInput, setTextInput ] = useState('');\n  const [ subscribeInput, setSubscribeInput ] = useState('');\n\n  const [ urlList, setUrlList ] = useState([]);\n  const [ urlSelected, setUrlSelect ] = useState({});\n\n  const [ clipboard, setClipboard ] = useClippy();\n\n  const [ isLoading, setLoading ] = useState(true);\n\n  const [ inputActive, setInputActive ] = useState('BASE64');\n\n  const supportedType = ['vmess','trojan','ss'];\n\n  const inputTabList = [{key: 'BASE64', tab: 'BASE64'}, {key: 'TEXT', tab: 'TEXT'}, {key: 'URL', tab: 'URL'}]\n\n  // convert utf-8 encoded base64\n  const Base64 = {\n    encode: (s) => {\n      return btoa(unescape(encodeURIComponent(s)));\n    },\n    decode: (s) => {\n      return decodeURIComponent(escape(atob(s)));\n    }\n  };\n\n  const urlType = (text) => {\n    if(text.startsWith('vmess://')){\n      return 'vmess';\n    }else if (text.startsWith('trojan://')){\n      return 'trojan';\n    }else if ((text.startsWith('ss://'))){\n      return 'ss';\n    }else {\n      return 'unsupported';\n    }\n  }\n\n  const urlJson = (text) => {\n    if(urlType(text) === 'vmess'){\n      return JSON.parse(Base64.decode(text.replace('vmess://','')));\n    }else if(urlType(text) === 'ss'){\n      const starIndex = text.search('#');\n      return Base64.decode( text.slice(5,starIndex) );\n      // chacha20-ietf:password@mydomain.com:8888\n    }else {\n      return text\n    }\n  }\n\n  const urlName = (text) => {\n    if(urlType(text) === 'vmess'){\n      return urlJson(text)['ps'];\n    }else if (urlType(text) === 'trojan'){\n      const starIndex = text.search('#');\n      return decodeURIComponent(text.slice(starIndex+1));\n    }else if (urlType(text) === 'ss'){\n      const starIndex = text.search('#');\n      return decodeURIComponent(text.slice(starIndex+1));\n    }\n  }\n\n  const isValidB64 = (text) => {\n    const base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n    return base64regex.test(text);\n  }\n\n  const decodeB64 = (text) => {\n    if(text.length && isValidB64(text)){\n      const list = Base64.decode(text).split('\\n');\n      const urls = [];\n      for (let item of list){\n        let urlItem = { type: urlType(item), name: urlName(item),\n        json: urlJson(item), raw: item, id: shortid.generate() };\n        urls.push(urlItem);\n      }\n      console.log('decodeB64',urls);\n      return urls;\n    }else {\n      return text;\n    }\n  }\n\n  const encodeB64 = (arr) => {\n    //console.log('encodeB64',arr);\n    let urlOutput = '';\n    for (let i=0; i<arr.length; ++i){\n      const url = arr[i];\n      if(url.type === 'vmess'){\n        let newUrl = JSON.parse(JSON.stringify(url.json));\n        newUrl.ps = url.name;\n        urlOutput += 'vmess://' + Base64.encode(JSON.stringify(newUrl));\n      }else if(url.type === 'trojan'){\n        const starIndex = url.json.search('#')\n        urlOutput += url.json.slice(0,starIndex) + '#' + encodeURIComponent(url.name);\n      }else if(url.type === 'ss'){\n        const starIndex = url.json.search('#')\n        urlOutput += 'ss://' + Base64.encode(url.json.slice(0,starIndex)) + '#' + encodeURIComponent(url.name);\n      }else {\n        continue;\n      }\n      if ( i+1 < arr.length) {\n        urlOutput += '\\n';\n      }\n    }\n    console.log(urlOutput.split('\\n'));\n    //console.log(Base64.encode(urlOutput));\n    setClipboard(Base64.encode(urlOutput));\n    return Base64.encode(urlOutput);\n  }\n\n  const getUrlList = (text_b64) => {\n    try{\n      if(isValidB64(text_b64)) {\n        //function decodeB64 will decode base64 format urls and create a urlList array\n        //decodeB64(text_b64) is an array from original base64\n        //urls is decodeB64(text_b64) skipping empty liines\n        const urls = decodeB64(text_b64).filter(x => x.raw !== \"\");\n        if (urls.length <  decodeB64(text_b64).length){\n          setBase64Input(encodeB64(urls)); // update base64 input field if any empty line was skipped\n          setTextInput(Base64.decode(encodeB64(urls)));\n        }\n        if (urls && urls.filter(x => supportedType.includes(x.type)).length > 0){\n          setUrlList(urls);\n          setUrlSelect(urls[0]);\n          console.log('getUrlList',urls);\n          setLoading(false);\n        }\n      }\n    }catch(err) {\n      console.log(err);\n    }\n  }\n\n  const inputOnChange = {\n    base64: (e) => {\n      setBase64Input(e.target.value);\n      if(isValidB64(e.target.value)) {\n        try{\n          setTextInput(Base64.decode(e.target.value));\n          getUrlList(e.target.value);\n        }catch(err){\n          console.error(err);\n        }\n      }\n    },\n    text: (e) => {\n      setTextInput(e.target.value);\n      const text_b64 = Base64.encode(e.target.value);\n      setBase64Input(text_b64);\n      getUrlList(text_b64);\n    },\n    subscribe: (e) => {\n      setSubscribeInput(e.target.value);\n      const key = 'fetching';\n      message.loading({ content: '導入訂閱鏈接中', key });\n      axios.get(e.target.value)\n      .then(res => {return res.data;})\n      .then(x => {setBase64Input(x); return Base64.decode(x);})\n      .then(x => {setTextInput(x); return Base64.encode(x)})\n      .then(x => {getUrlList(x);  message.success({ content: '導入成功！', key, duration: 2 }); })\n      .catch(err => {console.error(err); message.warning({ content: '導入失敗', key, duration: 2 }); });\n    }\n  }\n\n  const importFromClipboard = {\n    base64: () => {\n      setBase64Input(clipboard);\n      if(isValidB64(clipboard)) {\n        try{\n          setTextInput(Base64.decode(clipboard));\n          getUrlList(clipboard);\n        }catch(err){\n          console.error(err);\n        }\n      }\n    },\n    text: () => {\n      setTextInput(clipboard);\n      const text_b64 = Base64.encode(clipboard);\n      setBase64Input(text_b64);\n      getUrlList(text_b64);\n    }\n  }\n\n  const selectOnChange = (e) => {\n    //console.log(e);\n    setUrlSelect(urlList[urlList.findIndex(x => x.id === e[1])]);\n  }\n\n  const editNameOnInput = (e) => {\n    setUrlSelect({...urlSelected, name: e.target.value });\n    setUrlList(urlList.map(item => item.id === urlSelected.id ? {...item, name: e.target.value }: item));\n  }\n\n  const editNameOnChange = () => {\n    // Mapping the old array into a new one, swapping what you want to change for an updated item along the way.\n    setUrlList(urlList.map(item => item.id === urlSelected.id ? {...item, name: urlSelected.name }: item));\n  }\n\n  const saveOnClick = () => {\n    editNameOnChange();\n    const output = encodeB64(urlList);\n    setBase64Input(output);\n    message.success('新鏈接己複製');\n  }\n\n  const redoOnClick = () => {\n    const orignalName = urlName(urlList[urlList.findIndex(x => x.id === urlSelected.id)].raw);\n    setUrlSelect({...urlSelected, name: orignalName });\n    setUrlList(urlList.map(item => item.id === urlSelected.id ? {...item, name: orignalName }: item));\n  }\n\n  const deleteOnClick = () => {\n    confirm({\n      title: '確定要刪除' + urlSelected.name + '?' ,\n      icon: <ExclamationCircleOutlined />,\n      content: '這項操作無法復原',\n      okText: '確定',\n      cancelText: '取消',\n      onOk() {\n        //console.log(urlSelected);\n        performDelete(urlSelected);\n        //console.log('OK');\n      },\n      onCancel() {\n        //console.log('Cancel');\n      },\n    });\n  }\n\n  const performDelete = (obj) => {\n    const old_select_index = urlList.findIndex(x => x.id === obj.id);\n    // move pointer\n    if(urlList.filter(item => item.id !== obj.id).length){\n      setUrlSelect(urlList[(old_select_index+1)%urlList.length]);\n    }else {\n      setUrlSelect({});\n    }\n    \n    //delete\n    setUrlList(urlList.filter(item => item.id !== obj.id));\n\n    message.success('刪除 ' + obj.name + ' 成功');\n  }\n\n  const getLogo = (type) => {\n    const logo = {\n      vmess: (<img src={Logo.v2ray} alt=\"\" class=\"logo-wrap\"></img>),\n      trojan: (<img src={Logo.trojan} alt=\"\" class=\"logo-wrap\"></img>),\n      ss: (<img src={Logo.ss} alt=\"\" class=\"logo-wrap\"></img>)\n    };\n    //console.log(logo[type]);\n    return logo.hasOwnProperty(type)? logo[type]:(<QuestionCircleTwoTone />)\n  }\n\n  const inputTabContent = {\n    BASE64: (<Row gutter={[0,16]}>\n      <Col span={24}><TextArea rows={4} autosize={false} onChange={inputOnChange.base64} value={base64Input}/></Col>\n      <Col span={24} style={{marginBottom: -21}}><Button type=\"primary\" block onClick={importFromClipboard.base64}>從剪貼版導入</Button></Col></Row>),\n    TEXT: (<Row gutter={[0,16]}>\n      <Col span={24}><TextArea rows={4} autosize={false} onChange={inputOnChange.text} value={textInput}/></Col>\n      <Col span={24} style={{marginBottom: -21}}><Button type=\"primary\" block onClick={importFromClipboard.text}>從剪貼版導入</Button></Col></Row>),\n    URL: (<Row gutter={[0,16]}>\n      <Col span={24}><TextArea rows={4} autosize={false} onChange={inputOnChange.subscribe} value={subscribeInput}/></Col>\n      <Col span={24} style={{marginBottom: -21}}><Button type=\"primary\" block onClick={importFromClipboard.subscribe}>從剪貼版導入</Button></Col></Row>)\n  }\n\n  return (\n    <div className=\"App\">\n      <Layout>\n      <Row justify={\"center\"}>\n        <h2>Shawdowrockets 訂閱鏈接編輯器</h2>\n      </Row>\n      <Content>\n      <Row gutter={[16,16]} justify={\"space-between\"}>\n        <Col xs={24} sm={24} md={12}>\n          <Card title=\"快速操作\" bordered={false}>\n            <Row gutter={[16,24]} justify={\"center\"} style={{height: 60}}>\n              <Col xs={16} sm={16} md={14}>\n              <Select showSearch value={urlList.length? urlSelected.name: ''} disabled={isLoading || !base64Input.length} style={{width: \"100%\"}} onChange={selectOnChange}\n              filterOption={ (input,option) => option.children[2].toLowerCase().indexOf(input.toLowerCase()) >= 0  }>\n              { urlList.map( (item) => (<Option key={item.id} value={[item.name,item.id]}>{getLogo(item.type)} {item.name}</Option>) ) }\n              </Select>\n            </Col>\n            <Col xs={4} sm={4} md={2}>\n            <Button type=\"primary\" disabled={isLoading ||!base64Input.length} icon={<DeleteOutlined />} onClick={deleteOnClick} danger/>\n            </Col>\n            </Row>\n            <Row gutter={[16,24]} justify={\"center\"}>\n              <Col xs={20} sm={20} md={16}>\n              <Input addonAfter={urlSelected? getLogo(urlSelected.type):(<QuestionCircleTwoTone />)} value={urlSelected? urlSelected.name:''} disabled={isLoading || !base64Input.length} onChange={editNameOnInput} onPressEnter={editNameOnChange}/>\n              </Col>\n            </Row>\n            <Row gutter={16} justify={\"center\"} style={{marginBottom: -8}}>\n              <Col xs={12} sm={12} md={6}>\n              <Button type=\"primary\" icon={<UndoOutlined />} onClick={redoOnClick}>復原</Button>\n              </Col>\n              <Col xs={12} sm={12} md={6}>\n              <Button type=\"primary\" icon={<SaveOutlined />} onClick={saveOnClick}>保存</Button>\n              </Col>\n              <Col xs={0} sm={0} md={6}>\n              <Button type=\"primary\" icon={<DownloadOutlined />}>匯出</Button>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col xs={24} sm={24} md={12}>\n          <Card tabList={inputTabList} activeTabKey={inputActive} onTabChange={key => setInputActive(key)}>{inputTabContent[inputActive]}</Card>\n        </Col>\n      </Row>\n      </Content>\n      <Footer>\n      <Row justify={\"center\"}>\n      Created by&nbsp; <a href=\"https:www.phlinhng.com\">phlinhng</a>. &nbsp;All rights reserved.\n      </Row>\n      </Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}